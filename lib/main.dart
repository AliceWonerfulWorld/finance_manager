import 'package:flutter/material.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter_localizations/flutter_localizations.dart';
import 'package:provider/provider.dart';
import 'package:finance_manager/ui/home/home_screen.dart';
import 'package:finance_manager/ui/dashboard/dashboard_screen.dart';
import 'package:finance_manager/config/database_helper.dart';
import 'package:finance_manager/config/web_error_handler.dart';
import 'package:finance_manager/providers/transaction_provider.dart';
import 'package:finance_manager/ui/transactions/transactions_screen.dart';
import 'package:finance_manager/ui/settings/settings_screen.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:finance_manager/providers/goal_provider.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:finance_manager/providers/budget_provider.dart';
import 'package:finance_manager/providers/savings_provider.dart';
import 'package:finance_manager/ui/splash/splash_screen.dart';

// WebÂ∞ÇÁî®„ÅÆ„Ç®„É≥„Éà„É™„Éº„Éù„Ç§„É≥„Éà
import 'web_main_entry.dart';

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  debugPrint("üíæ „Ç¢„Éó„É™„ÅÆÂàùÊúüÂåñÈñãÂßã...");
  
  final prefs = await SharedPreferences.getInstance();

  // Web„Éó„É©„ÉÉ„Éà„Éï„Ç©„Éº„É†„Å®ÈÄöÂ∏∏„Éó„É©„ÉÉ„Éà„Éï„Ç©„Éº„É†„Åß„Ç¢„Éó„É™„ÇíÂàÜÈõ¢
  if (kIsWeb) {
    debugPrint("üåê WebÁí∞Â¢ÉÂ∞ÇÁî®„É¢„Éº„Éâ„ÅßÂÆüË°å„Åó„Åæ„Åô");
    runApp(WebApp(prefs: prefs));
  } else {
    debugPrint("üì± ÈÄöÂ∏∏Áí∞Â¢É„ÅßÂÆüË°å„Åó„Åæ„Åô");
    
    // „Éá„Éº„Çø„Éô„Éº„ÇπÂàùÊúüÂåñ
    try {
      await DatabaseHelper.instance.database;
      debugPrint("‚úÖ „Éá„Éº„Çø„Éô„Éº„Çπ„ÅÆÊ∫ñÂÇôÂÆå‰∫Ü");
    } catch (e) {
      debugPrint("‚ùå „Éá„Éº„Çø„Éô„Éº„ÇπÂàùÊúüÂåñ‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü: $e");
    }

    final transactionProvider = TransactionProvider();
    
    // „Éó„É≠„Éê„Ç§„ÉÄ„ÉºË®≠ÂÆö
    final providers = [
      ChangeNotifierProvider(create: (_) => transactionProvider),
      ChangeNotifierProvider(create: (_) => GoalProvider(prefs)),
      ChangeNotifierProvider(create: (_) => BudgetProvider(prefs, transactionProvider)),
      ChangeNotifierProvider(create: (_) => SavingsProvider()),
    ];
    
    runApp(
      MultiProvider(
        providers: providers,
        child: WebErrorHandler(
          child: MaterialApp(
            debugShowCheckedModeBanner: false,
            theme: ThemeData(
              colorScheme: ColorScheme.fromSeed(seedColor: Colors.blue),
              useMaterial3: true,
              textTheme: GoogleFonts.notoSansJpTextTheme(),
            ),
            localizationsDelegates: [
              GlobalMaterialLocalizations.delegate,
              GlobalWidgetsLocalizations.delegate,
              GlobalCupertinoLocalizations.delegate,
            ],
            supportedLocales: [
              Locale('ja', 'JP'),
            ],
            home: SplashScreen(
              nextScreen: MaterialApp(
                debugShowCheckedModeBanner: false,
                title: 'ÂÆ∂Ë®àÁ∞ø„Ç¢„Éó„É™',
                theme: ThemeData(
                  colorScheme: ColorScheme.fromSeed(seedColor: Colors.blue),
                  useMaterial3: true,
                  textTheme: GoogleFonts.notoSansJpTextTheme(),
                ),
                localizationsDelegates: [
                  GlobalMaterialLocalizations.delegate,
                  GlobalWidgetsLocalizations.delegate,
                  GlobalCupertinoLocalizations.delegate,
                ],
                supportedLocales: [
                  Locale('ja', 'JP'),
                ],
                home: const MainScreen(),
              ),
            ),
          ),
        ),
      ),
    );
  }
}

class MainScreen extends StatefulWidget {
  const MainScreen({super.key});

  @override
  State<MainScreen> createState() => _MainScreenState();
}

class _MainScreenState extends State<MainScreen> {
  int _selectedIndex = 0;

  final List<Widget> _screens = [
    HomeScreen(),
    const DashboardScreen(),
    const TransactionsScreen(),
    const SettingsScreen(),
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: _screens[_selectedIndex],
      bottomNavigationBar: NavigationBar(
        selectedIndex: _selectedIndex,
        onDestinationSelected: (index) {
          setState(() {
            _selectedIndex = index;
          });
        },
        destinations: const [
          NavigationDestination(
            icon: Icon(Icons.home),
            label: '„Éõ„Éº„É†',
          ),
          NavigationDestination(
            icon: Icon(Icons.dashboard),
            label: '„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ',
          ),
          NavigationDestination(
            icon: Icon(Icons.receipt_long),
            label: 'ÂèñÂºï',
          ),
          NavigationDestination(
            icon: Icon(Icons.settings),
            label: 'Ë®≠ÂÆö',
          ),
        ],
      ),
    );
  }
}
